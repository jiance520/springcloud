#读取配置文件的顺序优先级为谁在前(0a-z)就先读取谁！跟其它无关!application.yml>bootstrap.yml>config.properties
#sprinb boot工程及其web工程只能读取application.properties和xxx.yml，不能读取config.properties!
server:
  port: 8082
  servlet:
    #如果引用的oneupdate中读取了context-path，就不能注释context-path，会报错，默认是/！
    context-path: /buy51cto

spring:
  application:
    name: buy51cto
  profiles:
    active: prod

---

#开发环境
#默认端口8080，Edit...配置的VM options:-Dserver.port=8082>git:http://localhost:9100/master/apigateway-dev.yml高于>bootstrap.yml/application.yml
server:
  port: 8082

#服务的名称,不在git指定，在boostrap.yml指定
spring:
  application:
    name: buy51cto
  profiles: dev
  datasource:
    name: buy51cto
    driver-class-name: com.mysql.jdbc.Driver
    #用于6以上版本mysql，MySQL 5.5.45+，6+版本默认要求建立SSL连接。
    url: jdbc:mysql://localhost:3306/buy51cto?useSSL=false&serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf8
    type: com.alibaba.druid.pool.DruidDataSource
    username: root
    password: root
  #rabbitmq+控制类注解@RefreshScope用于从git自动更新配置文件bootstrap.xml
  rabbitmq:
    #host: 10.0.0.11
    host: 106.13.100.117
    port: 5672
    username: guest
    password: guest
  redis:
    database: 0
    host: 106.13.100.117
    port: 6378
    timeout: 2000
  #zipkin服务所在地址
  zipkin:
    base-url: http://106.13.100.117:9411
    sender:
      type: web
      #SpringCloud整合sleuth，使用zipkin时不显示服务,https://www.cnblogs.com/Dandwj/p/11179141.html,需要加
      #sender:
      #　　type: web
  #配置百分比采样比，开发环境可以设置为1，表示全部，生产就用默认
  sleuth:
    sampler:
      probability: 1
  #指定从哪个配置中心读取，读取git配置，必须把application.yml改为bootstrap.yml,不在git指定，在boostrap.yml指定
  #本地配置和远程GIT部署https://blog.csdn.net/t610654893/article/details/82893000
#  cloud:
#    config:
#      discovery:
#        service-id: configserver
#        enabled: false
      #指定git的配置文件
      #profile: dev
#以下是https://gitee.com/f8xn/springcloud/edit/master/apigateway-dev.yml增加的，变量env只起标识作用
#env: dev/test
#branch: master/test

  mvc:
    static-path-pattern: /**
    favicon:
      enabled: false
    view:
      prefix: /templates #classpath:/templates/
      suffix: .html
#  thymeleaf:
#    cache: false #关闭缓存
#    mode: HTML #LEGACYHTML5
#必须加上，指定mapper路径，否则增删改查找不到方法。
mybatis:
  mapper-locations: classpath:mapper/*.xml
  configuration:
    auto-mapping-behavior: full
    #解决spring boot整合mybatis时 返回map value为空字段不显示
    call-setters-on-nulls: true
    #在控制台上打印sql语句
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  #可有可无的配置
  #引用类时，可简写，配置mapper.xml文件中，如com.entity.User在User,resultType="user"写成User
  type-aliases-package: com.entity

#log4j/log4j2
#logging:
#  level: info
#  #放在resources下，如放在其他路径则对应修改
#  config: classpath:log4j2_dev.xml
#  在log日志中打印sql
#  com.eth.wallet.mapper: debug

#logging自定义日志路径,日志配置文件logback-spring.xml取值：<springProperty scope="context" name="logdir" source="logback.logdir" />
#logback:
#  logdir: D:\workspace\idea\springcloud\f8xn\buy51cto
#  appname: sell

#指定注册中心地址,不在git指定，在boostrap.yml指定
eureka:
  client:
    serviceUrl:
      #由于一个容器一个内网地址，配置localhost会无法本地容器的注册中心
      defaultZone: http://localhost:8761/eureka/
  #配置中心访问出错，路径不对：修改所有的注册中心，增加下面配置
  instance:
    instance-id: ${spring.cloud.client.ip-address}:${server.port}
    prefer-ip-address: true

#暴露全部的监控信息，被调用的服务接口才要加？
management:
  endpoints:
    web:
      exposure:
        include: "*"
---

#测试环境
server:
  port: 8082

spring:
  application:
    name: buy51cto
  profiles: test
  datasource:
    name: buy51cto
    driver-class-name: com.mysql.jdbc.Driver
    url: jdbc:mysql://localhost:3306/buy51cto?useSSL=false&serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf8
    type: com.alibaba.druid.pool.DruidDataSource
    username: root
    password: root
  rabbitmq:
    host: 106.13.100.117
    port: 5672
    username: guest
    password: guest
  redis:
    database: 0
    host: 106.13.100.117
    port: 6378
    timeout: 2000
  zipkin:
    base-url: http://106.13.100.117:9411
    sender:
      type: web
  sleuth:
    sampler:
      probability: 1
  cloud:
    config:
      discovery:
        service-id: configserver
        enabled: false
      #profile: test

mybatis:
  mapper-locations: classpath:mapper/*.xml
  configuration:
    auto-mapping-behavior: full
    call-setters-on-nulls: true
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  type-aliases-package: com.entity

eureka:
  client:
    serviceUrl:
      defaultZone: http://106.13.100.117:8761/eureka/
  instance:
    instance-id: ${spring.cloud.client.ip-address}:${server.port}
    prefer-ip-address: true

management:
  endpoints:
    web:
      exposure:
        include: "*"

---

#生产环境
server:
  port: 8082

spring:
  application:
    name: buy51cto
  profiles: prod
  datasource:
    name: buy51cto
    driver-class-name: com.mysql.jdbc.Driver
    url: jdbc:mysql://47.107.171.60/buy51cto?useSSL=false&serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf8
    type: com.alibaba.druid.pool.DruidDataSource
    username: root
    password: autof8Ol10
  rabbitmq:
    host: 106.13.100.117
    port: 5672
    username: guest
    password: guest
  redis:
    database: 0
    host: 106.13.100.117
    port: 6378
    timeout: 2000
  zipkin:
    base-url: http://106.13.100.117:9411
    sender:
      type: web
  sleuth:
    sampler:
      probability: 1
  cloud:
    config:
      discovery:
        service-id: configserver
        enabled: false
    #profile: prod

mybatis:
  mapper-locations: classpath:mapper/*.xml
  configuration:
    auto-mapping-behavior: full
    call-setters-on-nulls: true
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  type-aliases-package: com.entity

eureka:
  client:
    serviceUrl:
      defaultZone: http://106.13.100.117:8761/eureka/
  instance:
    instance-id: ${spring.cloud.client.ip-address}:${server.port}
    prefer-ip-address: true

management:
  endpoints:
    web:
      exposure:
        include: "*"

